/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.pojos;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Links implements Serializable {

    private static final long serialVersionUID = 1L;

    private String url;
    private Long id;
    private LocalDateTime lastCheckTime;
    private Integer count;

    public Links() {}

    public Links(Links value) {
        this.url = value.url;
        this.id = value.id;
        this.lastCheckTime = value.lastCheckTime;
        this.count = value.count;
    }

    @ConstructorProperties({ "url", "id", "lastCheckTime", "count" })
    public Links(
        @NotNull String url,
        @NotNull Long id,
        @Nullable LocalDateTime lastCheckTime,
        @Nullable Integer count
    ) {
        this.url = url;
        this.id = id;
        this.lastCheckTime = lastCheckTime;
        this.count = count;
    }

    /**
     * Getter for <code>LINKS.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 255)
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINKS.URL</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINKS.ID</code>.
     */
    @NotNull
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>LINKS.ID</code>.
     */
    public void setId(@NotNull Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>LINKS.LAST_CHECK_TIME</code>.
     */
    @Nullable
    public LocalDateTime getLastCheckTime() {
        return this.lastCheckTime;
    }

    /**
     * Setter for <code>LINKS.LAST_CHECK_TIME</code>.
     */
    public void setLastCheckTime(@Nullable LocalDateTime lastCheckTime) {
        this.lastCheckTime = lastCheckTime;
    }

    /**
     * Getter for <code>LINKS.COUNT</code>.
     */
    @Nullable
    public Integer getCount() {
        return this.count;
    }

    /**
     * Setter for <code>LINKS.COUNT</code>.
     */
    public void setCount(@Nullable Integer count) {
        this.count = count;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Links other = (Links) obj;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.lastCheckTime == null) {
            if (other.lastCheckTime != null)
                return false;
        }
        else if (!this.lastCheckTime.equals(other.lastCheckTime))
            return false;
        if (this.count == null) {
            if (other.count != null)
                return false;
        }
        else if (!this.count.equals(other.count))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.lastCheckTime == null) ? 0 : this.lastCheckTime.hashCode());
        result = prime * result + ((this.count == null) ? 0 : this.count.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Links (");

        sb.append(url);
        sb.append(", ").append(id);
        sb.append(", ").append(lastCheckTime);
        sb.append(", ").append(count);

        sb.append(")");
        return sb.toString();
    }
}
